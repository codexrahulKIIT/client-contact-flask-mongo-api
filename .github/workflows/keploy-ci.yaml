name: Keploy API Testing CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  keploy-test:
    runs-on: ubuntu-latest
    services:
      mongodb:
        image: mongo:latest
        ports:
          - "27017:27017"
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand(\"ping\").ok'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          # IMPORTANT: Change this to your actual Python version (e.g., '3.8', '3.10', '3.11', '3.12')
          python-version: '3.9'

      - name: Install application dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Flask pymongo Flask-Cors flasgger

      - name: Install Keploy CLI
        run: |
          curl --silent -O -L https://keploy.io/install.sh && sudo bash install.sh

      - name: Prepare eBPF Hooks
        run: |
          sudo mkdir -p /sys/kernel/debug
          sudo mkdir -p /sys/kernel/tracing
          sudo mount -t debugfs nodev /sys/kernel/debug || true
          sudo mount -t tracefs nodev /sys/kernel/tracing || true

      # === CRITICAL FIXES APPLIED IN THIS STEP ===
      - name: Run Keploy Test Suite
        run: |
          # ðŸš¨ FIX 1: Use GitHub Secrets syntax for the API key (DO NOT hardcode)
          export KEPLOY_API_KEY=${{ secrets.KEPLOY_API_KEY }}
          # ðŸš¨ FIX 2: Use 'keploy test -c' command, which works with this Keploy version
          # It automatically starts your Flask app and finds tests in .keploy directory
          sudo -E keploy test -c "python app.py" --delay 15 --cloud --language python
        env:
          FLASK_APP: app.py # Keep this, though Keploy's -c flag should handle app startup
